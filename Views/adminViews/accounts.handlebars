<div class="d-flex align-items-start">
    <div class="me-3">
        <a href="/admin" class="btn btn-outline-primary" style="margin-top: 20px;">Home</a>
    </div>
    <div class="flex-grow-1">
        <h2 class="my-4">Quản lý tài khoản</h2>
        <div class="input-group rounded" style="gap: 10px; margin-top: 20px;">
        <!-- Form tìm kiếm -->
        <form action="/admin/search" method="POST" class="d-flex align-items-center w-100">
            <input type="search" name="name" class="form-control rounded shadow-sm border-primary" 
                placeholder="Search name user" aria-label="Search" aria-describedby="search-addon" />
            <button type="submit" class="btn btn-primary ms-2 px-3 shadow-sm"><i class="fas fa-search"></i></button>
        </form>
        <!-- Nút thêm tài khoản -->
        <button class="btn btn-success shadow-sm px-3 py-2 hover-add-btn">
            <i class="fas fa-user-plus"></i> Add account
        </button>
    </div>
        <table class="table table-striped table-bordered table-hover">
            <thead class="thead-light">
                <tr>
                    <th scope="col">Tên</th>
                    <th scope="col">Email</th>
                    <th scope="col">Số điện thoại</th>
                    <th scope="col">Loại tài khoản</th>
                    <th scope="col">Ngày đăng kí</th>
                    <th scope="col">Edit & Delete</th>
                </tr>
            </thead>
            <tbody id="accountTable">
               <!-- Hiển thị tài khoảnkhoản -->
            </tbody>
        </table>
        <!-- Phân trang -->
        <nav aria-label="Pagination">
        <ul class="pagination justify-content-end" id="pagination">
        </ul>
    </nav>

    </div>
</div>
<style>
    .form-control:hover, .form-control:focus {
        border-color: #0d6efd;
        box-shadow: 0 0 8px rgba(13, 110, 253, 0.5);
    }

    .btn-primary:hover {
        background-color: #0b5ed7;
        border-color: #0a58ca;
        transform: scale(1.05); 
        transition: all 0.2s ease-in-out;
    }

    .btn-success:hover {
        background-color: #157347;
        border-color: #146c43;
        transform: scale(1.05);
        transition: all 0.2s ease-in-out;
    }

    .hover-add-btn i {
        margin-right: 5px; 
    }
</style>
<script>
    const accounts = {{{json accounts}}}; 
    console.log(accounts);
    const accountsPerPage = 10;
    let currentPage = 1;

    // Hàm hiển thị người dùng trên mỗi trang
    function displayAccounts(page) {
        const start = (page - 1) * accountsPerPage;
        const end = start + accountsPerPage;
        const accountsToDisplay = accounts.slice(start, end);
        
        // Clear bảng hiện tại
        const tableBody = document.getElementById('accountTable');
        tableBody.innerHTML = '';

        // Hiển thị các tài khoản trên bảng
        accountsToDisplay.forEach(account => {
            const row = document.createElement('tr');
            row.innerHTML = `
                <td>${account.fullname}</td>
                <td>${account.email}</td>
                <td>${account.phone}</td>
                <td>${account.role}</td>
                <td>${account.created_at}</td>
                <td>
                    <div class="dropdown">
                        <button class="btn btn-sm btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false"></button>
                        <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                            <li><a class="dropdown-item" href="/edit?${account.id}">Sửa</a></li>
                            <li><a class="dropdown-item" href="/delete?${account.id}">Xóa</a></li>
                        </ul>
                    </div>
                </td>
            `;
            tableBody.appendChild(row);
        });

        // Hiển thị phân trang
        displayPagination(page);
    }

    // Hàm hiển thị các nút phân trang
    function displayPagination(page) {
        const totalPages = Math.ceil(accounts.length / accountsPerPage);
        const pagination = document.getElementById('pagination');
        pagination.innerHTML = '';

        // Previous page
        if (page > 1) {
            pagination.innerHTML += `<li class="page-item"><a class="page-link" href="#" onclick="goToPage(${page - 1})"><<</a></li>`;
        }

        // Current page
        pagination.innerHTML += `<li class="page-item active"><a class="page-link" href="#">${page}</a></li>`;

        // Next page
        if (page < totalPages) {
            pagination.innerHTML += `<li class="page-item"><a class="page-link" href="#" onclick="goToPage(${page + 1})">>></a></li>`;
        }
    }

    // Hàm chuyển sang trang khác
    function goToPage(page) {
        currentPage = page;
        displayAccounts(page);
    }

    // Khởi tạo trang đầu tiên
    displayAccounts(currentPage);
</script>
